/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fr.mds.mongodb;

import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.ListCollectionsIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoDatabase;
import fr.mds.mongodb.util.ScannerSingleton;
import org.bson.Document;

import java.util.Arrays;
import java.util.List;

public class App {
    private static final String ARG_HOST = "--host";
    private static final String ARG_PORT = "--port";
    private static final String ARG_DBNAME = "--dbName";

    public static void main(String[] args) {
        String host = "localhost";
        String port = "27018";
        String dbName = "";

        for (int i = 0; i < args.length; i++) {
            if (args[i].equals(ARG_HOST) && args.length >= i + 1 && args[i+1] != null) {
                host = args[i+1];
            } else if (args[i].equals(ARG_PORT) && args.length >= i + 1 && args[i+1] != null) {
                port = args[i+1];
            } else if (args[i].equals(ARG_DBNAME) && args.length >= i + 1 && args[i+1] != null) {
                dbName = args[i+1];
            }
        }

        if (dbName.equals("")) {
            System.out.println("ERROR: no database selected.");
            return;
        }

        MongoClient mongoClient = App.createMongoClient(host, Integer.parseInt(port));
        MongoDatabase database = mongoClient.getDatabase(dbName);

        /*
        String result = ScannerSingleton.getInstance().getInput("Enter something");
        System.out.println(result);
        */
    }

    public static MongoClient createMongoClient(final String host, final Integer port)
    {
        MongoClient client = MongoClients.create(
                MongoClientSettings.builder()
                        .applyToClusterSettings(builder ->
                                builder.hosts(Arrays.asList(new ServerAddress(host, port))))
                        .build());

        return client;
    }
}
